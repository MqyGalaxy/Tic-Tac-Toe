---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Tic-Tac-Toe - PRTS System running">
	<main>
        <div class="warning">
            <img src="/imgs/warning.png" style="width: 50px;">
            <p style="width: 100%; text-align: center;">Please play the game in landscape mode.</p>
        </div>
        <div class="menu">
            <div class="game-menu">
                <header>
                    <div class="header-box">
                        <div class="user-box" id="menu-player1">
                            <img src="/imgs/user-icon.png" />
                            <div class="user-name">
                                <div class="number">Player 1</div>
                                <div class="name" id="username1">Dr. Player 1</div>
                            </div>
                            <div class="number-icon">
                                <img src="/imgs/Player1Icon.png">
                            </div>
                        </div>
                        <div class="user-box" id="menu-player2" style="display: none">
                            <img src="/imgs/user-icon.png" />
                            <div class="user-name">
                                <div class="number">Player 2</div>
                                <div class="name" id="username2">Dr. Player 2</div>
                            </div>
                            <div class="number-icon">
                                <img src="/imgs/Player2Icon.png">
                            </div>
                        </div>
                        <div></div>
                        <div class="title-box">
                            <img src="/imgs/startLOGO.png">
                        </div>
                    </div>
                </header>
                <div class="gamemode">
                    <div class="gamemode-box">
                        <div class="ai-mode">
                            <div class="play-with" id="play-with-ai">
                                <img src="/imgs/ai-mode.png">
                            </div>
                            <div class="button cc">Coming Soon...</div>
                        </div>
                        <div class="player-mode">
                            <div class="play-with" id="play-with-player">
                                <img src="/imgs/player-mode.png">
                            </div>
                            <div class="button game-setting">Coming Soon...</div>
                        </div>
                    </div>
                </div>
                <div class="background">
                    <img src="/imgs/background.png">
                </div>
            </div>
        </div>


        <div class="account-setting" id="accountWindows"style="display: none">
            <div class="account-background" id="accountBackground"></div>
            <div class="windows">
                <header>
                    <div class="player-list">
                        <div class="player player-1" id="ply1detail">Player 1</div>
                        <div class="player" id="ply2detail">Player 2</div>
                    </div>
                </header>
                <div class="detail">
                    <div class="player1-detail" id="player1-detail">
                        <h1 id="accountUsername1">Dr. Player 1</h1>
                        <div class="typename">
                            <input type="text" id="typename1" name="" required minlength="1" maxlength="9" size="12" placeholder="Username" />
                            <button type="button" id="changename1">Change</button>
                         </div>
                    </div>
                    <div class="player2-detail" id="player2-detail" style="display: none;">
                        <h1 id="accountUsername2">Dr. Player 2</h1>
                        <div class="typename">
                            <input type="text" id="typename2" name="" required minlength="1" maxlength="9" size="12"placeholder="Username" />
                            <button type="button" id="changename2">Change</button>
                        </div>
                    </div>
                </div>
                <img class="close" id="closeAccountWindows" src="/imgs/close-000.png" />
            </div>
        </div>

        <div class="game-start" id="gameWindow" style="display: none">
            <div class="battlezone">
                <div class="borad">
                    <div class="cell" id="box-1">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="1-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="1-2" style="display: none">
                    </div>
                    <div class="cell" id="box-2">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="2-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="2-2" style="display: none">
                    </div>
                    <div class="cell" id="box-3">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="3-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="3-2" style="display: none">
                    </div>
                    <div class="cell" id="box-4">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="4-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="4-2" style="display: none">
                    </div>
                    <div class="cell" id="box-5">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="5-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="5-2" style="display: none">
                    </div>
                    <div class="cell" id="box-6">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="6-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="6-2" style="display: none">
                    </div>
                    <div class="cell" id="box-7">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="7-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="7-2" style="display: none">
                    </div>
                    <div class="cell" id="box-8">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="8-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="8-2" style="display: none">
                    </div>
                    <div class="cell" id="box-9">
                        <img src="/imgs/Player1Icon.png" class="piece player1-piece" id="9-1" style="display: none">
                        <img src="/imgs/Player2Icon.png" class="piece player2-piece" id="9-2" style="display: none">
                    </div>
                </div>
                <div class="player1" style="display: none">
                    <div id="battle-username1">Player 1</div>
                </div>
                <div class="player2" style="display: none">
                    <div id="battle-username1">Player 2</div>
                </div>
                <!-- 先手 -->
                <div class="first-overlay" id="firstOverlay">
                    <div class="first-message">
                        <img src="/imgs/Player1Icon.png" class="player-first" id="player1First">
                        <img src="/imgs/Player2Icon.png" class="player-first" id="player2First">
                        <h2 id="first-text"></h2>
                        <span class="win">First!</span>
                    </div>
                </div>
                <!-- 定义游戏结果 -->
                <div class="winner-overlay" id="winnerOverlay" style="display: none">
                    <div class="winner-message"  id="closeGame">
                        <h2 id="winner-text"></h2>
                        <span class="win" id="winIcon">WIN!</span><br>
                        <span style="margin-top: 20%; font-size: 10px;">Tap the screen to return to the menu.</span>
                    </div>
                </div>
            </div>
        </div>
	</main>
</Layout>

<style>
	:root {
		--boradBox-color: #fff;
		--boradBox-border: #dcdcdc;
        --gameHeader-color: #1a1a1a;
        --userBox-color: #4d4d4d;
        --player1-1: #d4133c;
        --player1-2: #EE5F7D;
        --player2-1: #33adbc;
        --player2-2: #65d4e3;
        --gold-1: #F6BD16;
        --gold-2: #FFD83B;
	}
	main {
        width: 100%;
		position: relative;
        height: 100vh;
        margin: 0;
        padding: 0;
	}

    .warning {
        position: fixed;
        z-index: 997;
        width: 100%;
        height: 100%;
        display: none;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        background: var(--gameHeader-color);
        color: #fff;
    }
    .warning p {
        font-size: 16px;
    }
    @media only screen and (max-width: 500px) {
        .warning {
            display: flex;
        }
    }

    /* Menu */
    .menu {
        position: relative;
    }
    .menu .background {
        position: fixed;
        z-index: 1;
        width: auto;
        height: 80%;
        left: 5%;
        bottom: 15px; 
    }
    .menu .background img{
        object-fit: contain;
        width: 100%;
        height: 100%;
    }
    @media only screen and (max-height: 500px) {
        .menu .background {
            height: 80%;
            left: 10px;
            bottom: 15px; 
        }
    }
    @media only screen and (max-height: 1024px) {
        .menu .background {
            height: 70%;
            left: 10px;
            bottom: 15px; 
        }
    }
    .menu .background img {
        width: 100%;
        height: 100%;
        opacity: .5;
        filter: saturate(150%);
    }
    .menu header {
        position: fixed;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 3;
        width: 100%;
        height: 5rem;
        background: var(--gameHeader-color);
    }
    .menu header .header-box, .first-message {
        position: relative;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 1920px;
		max-width: calc(100%);
        height: 100%;
    }
    .menu header .header-box .user-box {
        background: var(--userBox-color);
        position: relative;
        overflow: hidden;
        width: 320px;
        height: 100%;
        display: flex;
        justify-content: left;
        align-items: center;
        padding-left: 20px;
        padding-right: 20px;
        cursor: pointer;
        transition: all 0.3s;
    }
    .menu header .header-box .user-box img{
        height: 70%;
        -webkit-user-drag: none;
    }
    .menu header .header-box .user-box .user-name {
        line-height: 1;
        transform: translate(0,-2px);
        padding: 10px;
        color: #fff;
        transition: all 0.3s;
        z-index: 4;
    }
    .menu header .header-box .user-box .user-name .number {
        font-size: 12px;
        transform: translate(1px,0);
        color: var(--player1-1);
        font-family: "Bender";
        transition: all 0.3s;
    }
    #menu-player2 .user-name .number {
        color: var(--player2-1);
    }
    .menu header .header-box .user-box .user-name .name {
        font-size: 22px;
    }
    .menu header .header-box .user-box:hover {
        background: linear-gradient(90deg,var(--player1-1) 37.98%,var(--player1-2) 100%); 
        box-shadow: 0 0 .75rem var(--player1-1);
        transition: all 0.3s;
    }
    #menu-player2:hover {
        background: linear-gradient(90deg,var(--player2-1) 37.98%,var(--player2-2) 100%); 
        box-shadow: 0 0 .75rem var(--player2-1);
    }
    .menu header .header-box .user-box:hover .user-name .number {
        color: #fff!important;
        transition: all 0.3s;
    }
    .menu header .header-box .user-box .number-icon {
        position: absolute;
        right: 10px;
        width: auto;
    }
    .menu header .header-box .user-box .number-icon img {
        width: 90px;
        transform: rotate(120deg);
        transition: all 0.3s;
    }
    .menu header .header-box .user-box:hover .number-icon img {
        filter: grayscale(100%);
        transition: all 0.3s;
    }
    .menu header .header-box .title-box, .menu header .header-box .title-box img {
        height: 100%;
    }
    .menu .game-menu .gamemode {
        position: fixed;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 2;
        width: 100%;
        height: 100%;
    }
    .menu .game-menu .gamemode .gamemode-box {
        position: fixed;
        display: flex;
        justify-content: end;
        align-items: center;
        z-index: 2;
        width: 1920px;
        max-width: calc(100%);
        height: 100%;
    }
    .menu .game-menu .gamemode .ai-mode, .menu .game-menu .gamemode .player-mode {
        margin-top: 0;
        margin-right: 10vh;
    }
    .menu .game-menu .gamemode .play-with {
        width: 40vh;
    }
    .menu .game-menu .gamemode .play-with img {
        width: 40vh;
        cursor: pointer;
        transition: all 0.3s;
    }
    .menu .game-menu .gamemode .play-with img:hover {
        filter: brightness(0.9);
        transition: all 0.3s;
    }
    .menu .game-menu .gamemode .button {
        margin-top: 2vh;
        width: 100%;
        border-radius: 1vh;
        height: 5vh;
        background-color: var(--userBox-color);
        color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    @media only screen and (max-height: 500px) {
        .menu header {
            height: 3.6rem;
        }
        .menu header .header-box .user-box {
            width: 220px;
        }
        .menu header .header-box .user-box .user-name {
            transform: translate(0,0);
        }
        .menu header .header-box .user-box .user-name .number {
            font-size: 10px;
        }
        .menu header .header-box .user-box .user-name .name {
            font-size: 16px;
        }
        .menu header .header-box .user-box .number-icon img {
            width: 50px;
        }
        .menu .game-menu .gamemode .ai-mode, .menu .game-menu .gamemode .player-mode {
            margin-top: 8vh;
            margin-right: 8vh;
        }
        .menu .game-menu .gamemode .play-with {
            width: 38vh;
        }
        .menu .game-menu .gamemode .play-with img {
            width: 38vh;
        }
        .menu .game-menu .gamemode .button {
            margin-top: 1vh;
        }
	}

    /* Account Setting */
    .account-setting {
		position: fixed;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 5;
        opacity: 0;
        transition: all 0.3s;
    }
    .account-setting .account-background, .winner-overlay {
        position: fixed;
        width: 100%;
        height: 100%;
        background: rgba(255,255,255,0.5);
    }
    .account-setting .windows, .winner-message {
        position: relative;
        width: 50%;
        height: 50%;
        min-width: 500px;
        min-height: 300px;
        background: var(--gameHeader-color);
    }
    .account-setting .windows header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 50px;
        background: var(--userBox-color);
    }
    .account-setting .windows header .player-list {
        display: flex;
        justify-content: left;
        align-items: center;
        position: relative;
        height: 100%;
    }
    .account-setting .windows header .player-list .player  {
        display: flex;
        align-items: center;
        padding-left: 10px;
        width: 200px;
        height: 100%;
        font-size: 20px;
        color: #fff;
        font-family: "Bender";
        cursor: pointer;
        transition: all 0.3s;
    }
    .account-setting .windows header .player-list .player:hover  {
        background: var(--webBackground-2);
        box-shadow: 0 0 .75rem #fff;
        transition: all 0.3s;
    }
    .account-setting .windows header .player-list .player-1  {
        background: linear-gradient(90deg,var(--player1-1) 37.98%,var(--player1-2) 100%)!important; 
        box-shadow: 0 0 .75rem var(--player1-1)!important;
        transition: all 0.3s;
    }
    .account-setting .windows header .player-list .player-2  {
        background: linear-gradient(90deg,var(--player2-1) 37.98%,var(--player2-2) 100%)!important; 
        box-shadow: 0 0 .75rem var(--player2-1)!important;
        transition: all 0.3s;
    }

    .account-setting .windows .detail {
        padding: 20px;
        color: #fff;
    }
    #accountUsername1, #accountUsername2 {
        font-size: 50px;
        font-family: "Source Han Sans CN Medium";
        margin: 0;
    }

    .account-setting .windows .detail .typename {
        display: flex;
        align-items: center;
        justify-content: left;
    }
    #typename1, #typename2 {
        outline-style: none;
        width: 200px;
        height: 20px;
        font-size: 16px;
        border: 0;
        border-radius: 40px 0 0 40px;
        padding: 10px;
        background: var(--webBackground-1);
        margin-right: 0;
    }
    #changename1, #changename2 {
        outline-style: none;
        cursor: pointer;
        color: #fff;
        width: 100px;
        height: 40px;
        font-size: 16px;
        border: 0;
        border-radius: 0 40px 40px 0;
        padding: 10px;
        margin: 0;
        margin-right: 0;
    }
    #changename1 {
        background: linear-gradient(90deg,var(--player1-1) 37.98%,var(--player1-2) 100%)!important; 
        transition: all 0.3s;
    }
    #changename1:hover {
        box-shadow: 0 0 .75rem var(--player1-1)!important;
        transition: all 0.3s;
    }
    #changename2 {
        background: linear-gradient(90deg,var(--player2-1) 37.98%,var(--player2-2) 100%)!important; 
        transition: all 0.3s;
    }
    #changename2:hover {
        box-shadow: 0 0 .75rem var(--player2-1)!important;
        transition: all 0.3s;
    }

    .account-setting .windows .close {
        position: absolute;
        top: 0;
        right: -60px;
        width: 50px;
        cursor: pointer;
        transition: all 0.3s;
    }
    .account-setting .windows .close:hover {
        transform: rotate(90deg);
        transition: all 0.3s;
    }
    @media only screen and (max-width: 1240px) {
        .account-setting .windows header {
            height: 30px;
        }
        .account-setting .windows header .player-list .player  {
            width: 100px;
            font-size: 12px;
        }
        #accountUsername1, #accountUsername2 {
            font-size: 30px;
        }
        .typename {
            transform: scale(0.7) translateX(-100px);
        }
        .account-setting .windows .close {
            right: -40px;
            width: 30px;
        }
	}
    
    

    
	
    /* Battle Zone */
    .game-start {
        z-index: 6;
        position: fixed;
        width: 100%;
        height: 100%;
		background: linear-gradient(180deg,var(--webBackground-0) 20%,var(--webBackground-1) 90%, var(--webBackground-2) 100%);
        opacity: 0;
        transition: all 0.3s;
    }
    .player1 , .player2 {
        position: fixed;
        background-color: black;
    }
    .player1 {
		left: 0;
		bottom: 0;
		max-width: 200px;
	}
	.player2 {
		right: 0;
		bottom: 0;
		max-width: 200px;
	}
    .battlezone {
		position: relative;
		display: flex;
		justify-content: center;
		align-items: center;
		margin: auto;
		padding-left: 1rem;
		padding-right: 1rem;
		width: 1200px;
		height: 100vh;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
    }
    .borad {
        display: grid;
        grid-template-columns: repeat(3, 5rem);
        grid-template-rows: repeat(3, 5rem);
		grid-row-gap: 8px;
		grid-column-gap: 8px;
    }
	.cell {
		width: 100%;
		height: 100%;
		border: 2px solid var(--boradBox-border);
		border-radius: 10px;
		background: var(--boradBox-color);
        display: flex;
        justify-content: center;
        align-items: center;
	}
    .cell .player1-piece {
        width: 60%;
        height: 60%;
    }
    .cell .player2-piece {
        width: 70%;
        height: 70%;
    }

    .winner-overlay, .first-overlay {
        position: fixed;
        color: #fff;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
        pointer-events: none;
        opacity: 0;
        transition: all 0.3s;
    }
    .winner-message {
        position: relative;
        padding: 20px;
        border-radius: 5px;
        text-align: center;
    }
    .winner-message h2 {
        font-size: 50px;
    }
    .winner-message .win {
        top: 30%;
        padding: 10px 30px 10px 30px;
        border-radius: 30px;
        font-family: "Source Han Sans CN Heavy";
        background: linear-gradient(90deg,var(--gold-1) 37.98%,var(--gold-2) 100%); 
        box-shadow: 0 0 .75rem var(--gold-2);
    }

    .first-message {
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
    .first-message h2, .first-message span {
        z-index: 10;
    }
    .first-message h2 {
        font-size: 50px;
        font-family: "Source Han Sans CN Heavy";
        padding: 0;
        margin: 0;
    }
    .first-message span {
        font-size: 30px;
        font-family: "Source Han Sans CN light";
        padding: 0;
        margin: 0;
    }
    .player-first {
        position: absolute;
        width: 30%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }


    /* 窗口显示 */
    .show {
        opacity: 1;
        pointer-events: auto;
        transition: all 0.3s;
    }

</style>

<!-- 修改名称 -->
<script>
    // 玩家1名称
    const changeNameButton1 = document.getElementById('changename1')!;
    changeNameButton1.addEventListener('click', () => {
        changeUsername1();
    });

    function changeUsername1() {
        const userInput = (document.getElementById('typename1') as HTMLInputElement).value;
        if (userInput == null || userInput == "") {
            alert("Username can not be empty!");
        }
        else {
            setNewName1(userInput);
            alert("Success!");
        }
    }

    function setNewName1(name: String) {
        (document.getElementById("username1") as HTMLInputElement).innerHTML = "Dr. " + name;
        (document.getElementById("accountUsername1") as HTMLInputElement).innerHTML = "Dr. " + name;
    }

    // 玩家2名称
    const changeNameButton2 = document.getElementById('changename2')!;
    changeNameButton2.addEventListener('click', () => {
        changeUsername2();
    });

    function changeUsername2() {
        const userInput = (document.getElementById('typename2') as HTMLInputElement).value;
        if (userInput == null || userInput == "") {
            alert("Username can not be empty!");
        }
        else {
            setNewName2(userInput);
            alert("Success!");
        }
    }

    function setNewName2(name: String) {
        (document.getElementById("username2") as HTMLInputElement).innerHTML = "Dr. " + name;
        (document.getElementById("accountUsername2") as HTMLInputElement).innerHTML = "Dr. " + name;
    }
</script>


<!-- 玩家设置 -->
<script>
    const menuPlayer1 = document.getElementById('menu-player1')!;
    const menuPlayer2 = document.getElementById('menu-player2')!;
    const ply1Detail = document.getElementById('ply1detail')!;
    const ply2Detail = document.getElementById('ply2detail')!;
    const accountBackground = document.getElementById('accountBackground')!;
    const closeAccountWindows = document.getElementById('closeAccountWindows')!;

    menuPlayer1.addEventListener('click', () => {
        openAcc();
    });
    menuPlayer2.addEventListener('click', () => {
        openAcc();
    });
    accountBackground.addEventListener('click', () => {
        closeAcc();
    });
    closeAccountWindows.addEventListener('click', () => {
        closeAcc();
    });
    ply1Detail.addEventListener('click', () => {
        showPlayer1Detail();
    });
    ply2Detail.addEventListener('click', () => {
        showPlayer2Detail();
    });

    
    function openAcc() {
        (document.getElementById("accountWindows") as HTMLInputElement).style.display = "";
        setTimeout(function () {
            (document.getElementById("accountWindows") as HTMLInputElement).classList.add('show');
        }, 100);
    }
    function closeAcc() {
        (document.getElementById("accountWindows") as HTMLInputElement).classList.remove('show');
        setTimeout(function () {
            (document.getElementById("accountWindows") as HTMLInputElement).style.display = "none";
        }, 500);
    }

    function showPlayer1Detail() {
        // setting header
        (document.getElementById("ply1detail") as HTMLInputElement).className = "player player-1";
        (document.getElementById("ply2detail") as HTMLInputElement).className = "player";

        // menu header
        (document.getElementById("menu-player1") as HTMLInputElement).style.display = "";
        (document.getElementById("menu-player2") as HTMLInputElement).style.display = "none";

        // detail page
        (document.getElementById("player1-detail") as HTMLInputElement).style.display = "";
        (document.getElementById("player2-detail") as HTMLInputElement).style.display = "none";
    }
    function showPlayer2Detail() {
        // setting header
        (document.getElementById("ply2detail") as HTMLInputElement).className = "player player-2";
        (document.getElementById("ply1detail") as HTMLInputElement).className = "player";
        
        // menu header
        (document.getElementById("menu-player1") as HTMLInputElement).style.display = "none";
        (document.getElementById("menu-player2") as HTMLInputElement).style.display = "";

        // detail page
        (document.getElementById("player1-detail") as HTMLInputElement).style.display = "none";
        (document.getElementById("player2-detail") as HTMLInputElement).style.display = "";
    }

</script>

<!-- 游戏本体 -->
<script>
import { Picture } from "astro:assets";

    let gameState = {
        currentPlayer: 0,
        board: [0, 0, 0, 0, 0, 0, 0, 0, 0],
        winner: 0,
        aiMode: false,
        winIcon: true,
        gameOver: false
    };

    // 点击格子
    const boxOne = document.getElementById('box-1')!;
    const boxTwo = document.getElementById('box-2')!;
    const boxThree = document.getElementById('box-3')!;
    const boxFour = document.getElementById('box-4')!;
    const boxFive = document.getElementById('box-5')!;
    const boxSix = document.getElementById('box-6')!;
    const boxSeven = document.getElementById('box-7')!;
    const boxEight = document.getElementById('box-8')!;
    const boxNine = document.getElementById('box-9')!;

    const playWithPlayer = document.getElementById('play-with-player')!;
    const playWithAi = document.getElementById('play-with-ai')!;
    const closeGame = document.getElementById('closeGame')!;

    playWithPlayer.addEventListener('click', () => {
        const num = Math.ceil(Math.random()*100);
        const firstText = (document.getElementById('first-text') as HTMLInputElement);

        if (gameState.aiMode == false) {
            if(num >= 50 && num <= 100) {
                gameState.currentPlayer = 1;
            } else if (num < 50 && num>= 0) {
                gameState.currentPlayer = 2;
            }
        }

        if (gameState.currentPlayer == 1) {
            firstText.textContent = `${(document.getElementById("accountUsername1") as HTMLInputElement).innerHTML}`;
            (document.getElementById("player1First") as HTMLInputElement).style.display = "";
            (document.getElementById("player2First") as HTMLInputElement).style.display = "none";
        } else if (gameState.currentPlayer == 2) {
            firstText.textContent = `${(document.getElementById("accountUsername2") as HTMLInputElement).innerHTML}`;
            (document.getElementById("player1First") as HTMLInputElement).style.display = "none";
            (document.getElementById("player2First") as HTMLInputElement).style.display = "";
        }

        (document.getElementById("gameWindow") as HTMLInputElement).style.display = "";
        setTimeout(function () {
            (document.getElementById("gameWindow") as HTMLInputElement).classList.add('show');
        }, 100);
        setTimeout(function () {
            (document.getElementById("firstOverlay") as HTMLInputElement).classList.add('show');
        }, 300);
        setTimeout(function () {
            (document.getElementById("firstOverlay") as HTMLInputElement).classList.remove('show');
        }, 1500);
    });
    
    playWithAi.addEventListener('click', () => {
        const firstText = (document.getElementById('first-text') as HTMLInputElement);

        gameState.aiMode = true;
        if (gameState.aiMode) {
            if ((document.getElementById("menu-player1") as HTMLInputElement).style.display == "") {
                gameState.currentPlayer = 1;
            } else if ((document.getElementById("menu-player2") as HTMLInputElement).style.display == "") {
                gameState.currentPlayer = 2;
            }
        }

        if (gameState.currentPlayer == 1) {
            firstText.textContent = `${(document.getElementById("accountUsername1") as HTMLInputElement).innerHTML}`;
            (document.getElementById("player1First") as HTMLInputElement).style.display = "";
            (document.getElementById("player2First") as HTMLInputElement).style.display = "none";
        } else if (gameState.currentPlayer == 2) {
            firstText.textContent = `${(document.getElementById("accountUsername2") as HTMLInputElement).innerHTML}`;
            (document.getElementById("player1First") as HTMLInputElement).style.display = "none";
            (document.getElementById("player2First") as HTMLInputElement).style.display = "";
        }

        (document.getElementById("gameWindow") as HTMLInputElement).style.display = "";
        setTimeout(function () {
            (document.getElementById("gameWindow") as HTMLInputElement).classList.add('show');
        }, 100);
        setTimeout(function () {
            (document.getElementById("firstOverlay") as HTMLInputElement).classList.add('show');
        }, 300);
        setTimeout(function () {
            (document.getElementById("firstOverlay") as HTMLInputElement).classList.remove('show');
        }, 1500);
    });

    function playMove(position: number) {
        if (position == 1) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("1-1") as HTMLInputElement).style.display = "";
                (document.getElementById("1-2") as HTMLInputElement).style.display = "none";
                gameState.board[0] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("1-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("1-2") as HTMLInputElement).style.display = "";
                gameState.board[0] = 2;
            }
        }
        if (position == 2) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("2-1") as HTMLInputElement).style.display = "";
                (document.getElementById("2-2") as HTMLInputElement).style.display = "none";
                gameState.board[1] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("2-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("2-2") as HTMLInputElement).style.display = "";
                gameState.board[1] = 2;
            }
        }
        if (position == 3) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("3-1") as HTMLInputElement).style.display = "";
                (document.getElementById("3-2") as HTMLInputElement).style.display = "none";
                gameState.board[2] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("3-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("3-2") as HTMLInputElement).style.display = "";
                gameState.board[2] = 2;
            }
        }
        if (position == 4) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("4-1") as HTMLInputElement).style.display = "";
                (document.getElementById("4-2") as HTMLInputElement).style.display = "none";
                gameState.board[3] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("4-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("4-2") as HTMLInputElement).style.display = "";
                gameState.board[3] = 2;
            }
        }
        if (position == 5) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("5-1") as HTMLInputElement).style.display = "";
                (document.getElementById("5-2") as HTMLInputElement).style.display = "none";
                gameState.board[4] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("5-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("5-2") as HTMLInputElement).style.display = "";
                gameState.board[4] = 2;
            }
        }
        if (position == 6) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("6-1") as HTMLInputElement).style.display = "";
                (document.getElementById("6-2") as HTMLInputElement).style.display = "none";
                gameState.board[5] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("6-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("6-2") as HTMLInputElement).style.display = "";
                gameState.board[5] = 2;
            }
        }
        if (position == 7) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("7-1") as HTMLInputElement).style.display = "";
                (document.getElementById("7-2") as HTMLInputElement).style.display = "none";
                gameState.board[6] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("7-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("7-2") as HTMLInputElement).style.display = "";
                gameState.board[6] = 2;
            }
        }
        if (position == 8) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("8-1") as HTMLInputElement).style.display = "";
                (document.getElementById("8-2") as HTMLInputElement).style.display = "none";
                gameState.board[7] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("8-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("8-2") as HTMLInputElement).style.display = "";
                gameState.board[7] = 2;
            }
        }
        if (position == 9) {
            if (gameState.currentPlayer == 1) {
                (document.getElementById("9-1") as HTMLInputElement).style.display = "";
                (document.getElementById("9-2") as HTMLInputElement).style.display = "none";
                gameState.board[8] = 1;
            }
            if (gameState.currentPlayer == 2) {
                (document.getElementById("9-1") as HTMLInputElement).style.display = "none";
                (document.getElementById("9-2") as HTMLInputElement).style.display = "";
                gameState.board[8] = 2;
            }
        }

        checkWin();

        if (gameState.gameOver) {
            showGameOverMessage();
            (document.getElementById("winnerOverlay") as HTMLInputElement).style.display = "";
            return;
        }

        if (gameState.currentPlayer == 1) {
            gameState.currentPlayer = 2;
        }
        else if (gameState.currentPlayer == 2) {
            gameState.currentPlayer = 1;
        }

    }

    function aiMove() {
        const bestMove = findBestMove(gameState.board);
        playMove(bestMove + 1);
    }

    function evaluate(board: Array<number>) {
        const winningCombinations = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8], // 横向
            [0, 3, 6], [1, 4, 7], [2, 5, 8], // 纵向
            [0, 4, 8], [2, 4, 6] // 对角线
        ];

        for (let [a, b, c] of winningCombinations) {
            if (board[a] !== 0 && board[a] === board[b] && board[a] === board[c]) {
                return board[a] === 2 ? +10 : -10;
            }
        }

        return 0;
    }

    function isMovesLeft(board: Array<number>) {
        return board.includes(0);
    }

    function minimax(board: Array<number>, depth: number, isMax: boolean) {
        const score = evaluate(board);

        if (score === 10) return score - depth;
        if (score === -10) return score + depth;
        if (!isMovesLeft(board)) return 0;

        // 增加玩家战胜AI机率
        if (Math.random() < 0.04) {
            return isMax ? -1000 : 1000;
        }

        if (isMax) {
            let best = -1000;

            for (let i = 0; i < 9; i++) {
                if (board[i] === 0) {
                    board[i] = 2;
                    best = Math.max(best, minimax(board, depth + 1, false));
                    board[i] = 0;
                }
            }

            return best;
        } else {
            let best = 1000;

            for (let i = 0; i < 9; i++) {
                if (board[i] === 0) {
                    board[i] = 1;
                    best = Math.min(best, minimax(board, depth + 1, true));
                    board[i] = 0;
                }
            }

            return best;
        }
    }

    function findBestMove(board: Array<number>) {
        let bestVal = -1000;
        let bestMove = -1;

        for (let i = 0; i < 9; i++) {
            if (board[i] === 0) {
                board[i] = 2;
                const moveVal = minimax(board, 0, false);
                board[i] = 0;

                if (moveVal > bestVal) {
                    bestMove = i;
                    bestVal = moveVal;
                }
            }
        }

        return bestMove;
    }

    boxOne.addEventListener('click', () => {
        if ((document.getElementById("1-1") as HTMLInputElement).style.display == "none" && (document.getElementById("1-2") as HTMLInputElement).style.display == "none") {
            playMove(1);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxTwo.addEventListener('click', () => {
        if ((document.getElementById("2-1") as HTMLInputElement).style.display == "none" && (document.getElementById("2-2") as HTMLInputElement).style.display == "none") {
            playMove(2);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxThree.addEventListener('click', () => {
        if ((document.getElementById("3-1") as HTMLInputElement).style.display == "none" && (document.getElementById("3-2") as HTMLInputElement).style.display == "none") {
            playMove(3);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxFour.addEventListener('click', () => {
        if ((document.getElementById("4-1") as HTMLInputElement).style.display == "none" && (document.getElementById("4-2") as HTMLInputElement).style.display == "none") {
            playMove(4);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxFive.addEventListener('click', () => {
        if ((document.getElementById("5-1") as HTMLInputElement).style.display == "none" && (document.getElementById("5-2") as HTMLInputElement).style.display == "none") {
            playMove(5);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxSix.addEventListener('click', () => {
        if ((document.getElementById("6-1") as HTMLInputElement).style.display == "none" && (document.getElementById("6-2") as HTMLInputElement).style.display == "none") {
            playMove(6);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxSeven.addEventListener('click', () => {
        if ((document.getElementById("7-1") as HTMLInputElement).style.display == "none" && (document.getElementById("7-2") as HTMLInputElement).style.display == "none") {
            playMove(7);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxEight.addEventListener('click', () => {
        if ((document.getElementById("8-1") as HTMLInputElement).style.display == "none" && (document.getElementById("8-2") as HTMLInputElement).style.display == "none") {
            playMove(8);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });
    boxNine.addEventListener('click', () => {
        if ((document.getElementById("9-1") as HTMLInputElement).style.display == "none" && (document.getElementById("9-2") as HTMLInputElement).style.display == "none") {
            playMove(9);
            
            if (gameState.aiMode) {
                setTimeout(function () {
                        aiMove();
                }, 500);
            }
        }
    });

    function checkWin() {
        const winningCombinations = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8], // 横向
            [0, 3, 6], [1, 4, 7], [2, 5, 8], // 纵向
            [0, 4, 8], [2, 4, 6] // 对角线
        ];

        for (let combination of winningCombinations) {
            const [a, b, c] = combination;
            if (
                gameState.board[a] &&
                gameState.board[a] === gameState.board[b] &&
                gameState.board[a] === gameState.board[c]
            ) {
                gameState.winner = gameState.currentPlayer;
                gameState.gameOver = true;
                return;
            }
        }

        if (gameState.board.every(cell => cell !== 0)) {
            gameState.gameOver = true;
        }
    }

    function showGameOverMessage() {
        if (gameState.winner != 0) {
            // alert(`Player ${gameState.winner} wins!`);
            showWinnerMessage()
        } else {
            showOverMessage();
        }
    }

    function showWinnerMessage() {
        const winnerOverlay = (document.querySelector('.winner-overlay') as HTMLInputElement);
        const winnerText = (document.getElementById('winner-text') as HTMLInputElement);
        
        if (gameState.winIcon) {
            (document.getElementById('winIcon') as HTMLInputElement).style.display = "";
        }
        if (gameState.aiMode == false) {
            if (gameState.winner == 1) {
                winnerText.textContent = `${(document.getElementById("accountUsername1") as HTMLInputElement).innerHTML}`;
            } else if (gameState.winner == 2) {
                winnerText.textContent = `${(document.getElementById("accountUsername2") as HTMLInputElement).innerHTML}`;
            }
        } else {
            if ((document.getElementById("menu-player1") as HTMLInputElement).style.display == "") {
                if (gameState.winner == 1) {
                    winnerText.textContent = `${(document.getElementById("accountUsername1") as HTMLInputElement).innerHTML}`;
                } else if (gameState.winner == 2) {
                    winnerText.textContent = `PRTS System`;
                }
            }
            if ((document.getElementById("menu-player2") as HTMLInputElement).style.display == "") {
                if (gameState.winner == 2) {
                    winnerText.textContent = `${(document.getElementById("accountUsername2") as HTMLInputElement).innerHTML}`;
                } else if (gameState.winner == 1) {
                    winnerText.textContent = `PRTS System`;
                }
            }
        }
        winnerOverlay.style.display = '';
        setTimeout(function () {
            winnerOverlay.classList.add('show');
        }, 100);
    }
    function showOverMessage() {
        gameState.winIcon = false;
        if (gameState.winIcon == false) {
            (document.getElementById('winIcon') as HTMLInputElement).style.display = "none";
        }
        const winnerOverlay = (document.querySelector('.winner-overlay') as HTMLInputElement);
        const winnerText = (document.getElementById('winner-text') as HTMLInputElement);
        winnerText.textContent = `DRAW!`;
        winnerOverlay.style.display = '';
        setTimeout(function () {
            winnerOverlay.classList.add('show');
        }, 100);
    }

    closeGame.addEventListener('click', () => {
        resetGame();
    });

    function resetGame() {
        // 重置游戏状态为初始值
        gameState.currentPlayer = 0;
        gameState.board = [0, 0, 0, 0, 0, 0, 0, 0, 0];
        gameState.winner = 0;
        gameState.aiMode = false;
        gameState.winIcon = true;
        gameState.gameOver = false;

        // 清空格子的内容
        (document.getElementById("1-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("1-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("2-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("2-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("3-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("3-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("4-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("4-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("5-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("5-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("6-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("6-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("7-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("7-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("8-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("8-2") as HTMLInputElement).style.display = "none";
        (document.getElementById("9-1") as HTMLInputElement).style.display = "none";
        (document.getElementById("9-2") as HTMLInputElement).style.display = "none";

        // 回到主菜单
        (document.getElementById("winnerOverlay") as HTMLInputElement).classList.remove('show');
        (document.getElementById("gameWindow") as HTMLInputElement).classList.remove('show');
        setTimeout(function () {
            (document.getElementById("winnerOverlay") as HTMLInputElement).style.display = 'none';
            (document.getElementById("gameWindow") as HTMLInputElement).style.display = 'none';
        }, 500);
    }
</script>

<script>
    window.addEventListener('beforeunload', function (event) {
        // 自定义提示信息（部分浏览器不支持）
        var confirmationMessage = '确定要刷新页面吗？所有未保存的数据将会丢失。';
        event.returnValue = confirmationMessage; // 标准规范
        return confirmationMessage; // 某些浏览器可能需要这一行
    });
</script>